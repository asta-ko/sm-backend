version: '3.4'

x-global-environment: &global-environment
  C_PROJECT_VERSION: __C_PROJECT_VERSION__
  C_PROJECT_STACK: __C_PROJECT_STACK__

x-projectname: &oi_sud
    env_file: .env
    image: __C_PROJECT_NAME__-virtualenv-test:latest
    environment:
        <<: *global-environment
    volumes:
        - ./:/code
    restart: on-failure

services:
    db:
      image: postgres:alpine
      ports:
      - 5432
      restart: always
      environment:
        POSTGRES_USER: "sudmonster"
        POSTGRES_PASSWORD: "sudmonster"
        POSTGRES_DB: "sudmonster"
      volumes:
        - db-data:/data/db
        - ./share/sql:/docker-entrypoint-initdb.d

    redis:
        image: redis:4.0.11
        volumes:
            - ./.docker/redis/data:/var/redis
        restart: always

    backend:
        <<: *oi_sud
        environment:
          DJANGO_MANAGE_MIGRATE: "on"
          DJANGO_MANAGE_COLLECTSTATIC: "on"
        volumes:
          - ./:/code
          - ./.docker/static:/var/www/static
          - ./.docker/media:/var/www/media
        command: ["gunicorn", "oi_sud.wsgi:application", "-b", "0.0.0.0:8081", "--name", "oi_sud", "--reload"]
        ports:
          - "8082:8081"

    test:
        <<: *oi_sud
        environment:
          DJANGO_SETTINGS_MODULE: 'oi_sud.config.test'
        command: ["echo", "'test'"]


    elasticsearch:
      container_name: django_elasticsearch_dsl_drf_elasticsearch
#      build:
#        context: .
#        dockerfile: ./docker/elasticsearch/Dockerfile
      image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
      volumes:
      - esdata:/usr/share/elasticsearch/data
      ports:
      - 9200:9200
      - 9300:9300
      environment:
  #    - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.routing.allocation.disk.watermark.low=97%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%

    celery_main:
        <<: *oi_sud
        command: ["celery", "-A", "oi_sud", "worker", "-l", "info", "-Q", "main", "-c", "1", "-n", "main" ]

    celery_other:
        <<: *oi_sud
        command: ["celery", "-A", "oi_sud", "worker", "-l", "info", "-Q", "other", "-c", "8", "-n", "other" ]

    celerybeat:
        <<: *oi_sud
        command: ["celery", "-A", "oi_sud", "beat", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler", "-l", "info", "--pidfile", "/tmp/celerybeat123324.pid", "--schedule", "/tmp/celerybeat-schedule"]

    flower:
      image: mher/flower
      command: ["flower", "--broker=redis://redis:6379/0", "--port=8888"]
      ports:
         - 8888:8888
volumes:
  db-data:
  esdata: