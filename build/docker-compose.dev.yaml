version: '3.4'

x-global-environment: &global-environment
  C_PROJECT_VERSION: 848791d6f691e3c53b6502119d2884835e3ebc0f
  C_PROJECT_STACK: dev

x-projectname: &oi_sud
  env_file: .env
  image: sudmonster-virtualenv-test:latest
  environment:
    <<: *global-environment
  volumes:
    - ./:/code
    - ../frontend:/code/frontend

  restart: on-failure

services:

  postgres:
      image: postgres:9.6
      environment:
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow

  db:
    image: postgres:alpine
    ports:
      - 5432
    restart: always
    environment:
      POSTGRES_USER: "sudmonster"
      POSTGRES_PASSWORD: "sudmonster"
      POSTGRES_DB: "sudmonster"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./share/sql:/docker-entrypoint-initdb.d

  redis:
    image: redis:5.0.5
    volumes:
      - ./.docker/redis/data:/var/redis
    restart: always

  backend:
    <<: *oi_sud
    environment:
      DJANGO_MANAGE_MIGRATE: "on"
      DJANGO_MANAGE_COLLECTSTATIC: "on"
    entrypoint: /code/build/virtualenv/docker-entrypoint.sh
    volumes:
      - ./:/code
      #- ./docker-entrypoint.sh:/docker-entrypoint.sh
      - ./.docker/static:/var/www/static
      - ./.docker/media:/var/www/media
    command: ["gunicorn", "oi_sud.wsgi:application", "-b", "0.0.0.0:8081", "--name", "oi_sud", "--reload", "--log-level", "info",  "-w", "5"]
    ports:
      - "8082:8081"

  frontend:
    <<: *oi_sud
    network_mode: host
    image: sudmonster-frontend-test:latest
    container_name: nuxt_frontend
    volumes:
      - ../frontend/:/cf
    restart: "always"
    working_dir: "/cf"
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"

  webserver:
      image: sudmonster-virtualenv-airflow:latest
      entrypoint: /entrypoint.sh
      restart: always
      env_file: .env.airflow
      depends_on:
          - postgres
          - redis
      environment:
          - LOAD_EX=n
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      volumes:
          - ./:/code
          - ./airflow/airflow.cfg:/airflow/airflow.cfg
          - ./airflow/dags:/usr/local/airflow/dags
          # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      ports:
          - "8083:8080"
      command: webserver
      healthcheck:
          test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
          interval: 30s
          timeout: 30s
          retries: 3

  scheduler:
      #image: puckel/docker-airflow:1.10.9
      image: sudmonster-virtualenv-airflow:latest
      env_file: .env.airflow
      entrypoint: /entrypoint.sh
      restart: always
      depends_on:
          - webserver
      volumes:
          - ./:/code
          - ./airflow/dags:/usr/local/airflow/dags
          - ./airflow/airflow.cfg:/airflow/airflow.cfg

        # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      environment:
          - LOAD_EX=n
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      command: scheduler


  worker:
      entrypoint: /entrypoint.sh
      image: sudmonster-virtualenv-airflow:latest
      restart: always
      env_file: .env.airflow
      depends_on:
          - scheduler
      volumes:
          - ./.docker/datalake:/code/data
          - ./:/code
          - ./airflow/dags:/usr/local/airflow/dags
          - ./airflow/airflow.cfg:/airflow/airflow.cfg
          # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      environment:
          - STACK=default_tasks
          - PYTHONUNBUFFERED=1
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      command: worker

  test:
    <<: *oi_sud
    environment:
      DJANGO_SETTINGS_MODULE: 'oi_sud.config.test'
    command: ["echo", "'test'"]

volumes:
  db-data:
