version: '3.4'

x-global-environment: &global-environment
  C_PROJECT_VERSION: __C_PROJECT_VERSION__
  C_PROJECT_STACK: __C_PROJECT_STACK__

x-projectname: &oi_sud
  env_file: .env
  image: __C_PROJECT_NAME__-virtualenv:latest
  environment:
    <<: *global-environment
  volumes:
    - ./:/code
    - /var/www/static:/var/www/static:rw
    - /var/www/media:/var/www/media:rw
  restart: on-failure
  labels:
    instance: sudmonster


#    logging:
#      driver: loki
#      options:
#        loki-url: "https://loki.ovdinfo.org/api/prom/push"
#        labels: "instance,job"
#        max-size: "1m"



services:
  db:
    container_name: sudmonster_db
    image: postgres:11.9-alpine
    ports:
      - 5432
    restart: always
    environment:
      POSTGRES_USER: "sudmonster"
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: "sudmonster"
    volumes:
      - ./.docker/psql-data:/var/lib/postgresql/data:rw
      - ./share/sql:/docker-entrypoint-initdb.d
    #logging:
    #  driver: loki
    #  options:
    #    loki-url: "http://95.216.217.126:3100/api/prom/push"
    #    labels: "instance,job"
    labels:
      job: postgres
      instance: sudmonster

  postgres:
      container_name: sudmonster_airflow_psql
      image: postgres:alpine
      environment:
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow

  redis:
    container_name: sudmonster_redis
    image: redis:4.0.11
    volumes:
      - ./.docker/redis/data:/var/redis
      - ./build/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command:
      - /usr/local/etc/redis/redis.conf
    sysctls:
      net.core.somaxconn: '511'

    restart: always
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: "http://95.216.217.126:3100/api/prom/push"
    #     labels: "instance,job"
    labels:
      job: redis
      instance: sudmonster


  backend:
    <<: *oi_sud
    container_name: sudmonster_backend
    environment:
      VIRTUAL_HOST: sm.ovdinfo.org
      VIRTUAL_PORT: 8081
      LETSENCRYPT_HOST: sm.ovdinfo.org
      LETSENCRYPT_EMAIL: asta.ko@ovdinfo.org

      DJANGO_MANAGE_MIGRATE: "on"
      DJANGO_MANAGE_COLLECTSTATIC: "on"

    volumes:
      - ./:/code
      - data-static:/var/www/static
      - ./.docker/media:/var/www/media
    command: ["gunicorn", "oi_sud.wsgi:application", "-k", "gevent", "-b", "0.0.0.0:8081", "--name", "oi_sud", "--reload", "-t", "720", "--workers", "5"]
    ports:
      - "8081:8081"
    labels:
      job: backend
      instance: sudmonster

  frontend:
    <<: *oi_sud
    #network_mode: host
    image: oi-sud-monster-frontend:latest
    container_name: sudmonster_frontend
    volumes:
      - ../oi-sud-monster-frontend/:/frontend
    restart: always
    ports:
      - "3000:3000"
    command:
      "npm run start"
    environment:
      VIRTUAL_HOST: sudmonster.ovdinfo.org
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: sudmonster.ovdinfo.org
      LETSENCRYPT_EMAIL: asta.ko@ovdinfo.org

  test:
    container_name: sudmonster_test
    <<: *oi_sud
    environment:
      DJANGO_SETTINGS_MODULE: 'oi_sud.config.test'
    command: ["echo", "'test'"]

  airflow_web:
      container_name: sudmonster_airflow_web
      image: oi-sud-monster-virtualenv-airflow:latest
      entrypoint: /entrypoint.sh
      restart: always
      env_file: .env.airflow
      depends_on:
          - postgres
          - redis
      environment:
          - LOAD_EX=n
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      volumes:
          - ./:/code
          - ./airflow/airflow.cfg:/usr/local/airflow/airflow.cfg
         # - ./airflow/webserver_config.py:/usr/local/airflow/webserver_config.py:z
          - ./airflow/dags:/usr/local/airflow/dags
          # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      ports:
          - "8083:8080"
      command: webserver
      healthcheck:
          test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
          interval: 30s
          timeout: 30s
          retries: 3

  airflow_scheduler:
      #image: puckel/docker-airflow:1.10.9
      container_name: sudmonster_airflow_scheduler
      image: oi-sud-monster-virtualenv-airflow:latest
      env_file: .env.airflow
      entrypoint: /entrypoint.sh
      restart: always
      depends_on:
          - airflow_web
      volumes:
          - ./:/code
          - ./airflow/dags:/usr/local/airflow/dags
          - ./airflow/airflow.cfg:/usr/local/airflow/airflow.cfg

        # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      environment:
          - LOAD_EX=n
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      command: scheduler


  worker:
      entrypoint: /entrypoint.sh
      container_name: sudmonster_airflow_worker
      image: oi-sud-monster-virtualenv-airflow:latest
      restart: always
      env_file: .env.airflow
      depends_on:
          - airflow_scheduler
      volumes:
          - ./.docker/datalake:/data
          - ./:/code
          - ./airflow/dags:/usr/local/airflow/dags
          - ./airflow/airflow.cfg:/usr/local/airflow/airflow.cfg
          # Uncomment to include custom plugins
          - ./airflow/plugins:/usr/local/airflow/plugins
      environment:
          - STACK=default_tasks
          - PYTHONUNBUFFERED=1
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - EXECUTOR=Celery
          - POSTGRES_USER=airflow
          - POSTGRES_PASSWORD=airflow
          - POSTGRES_DB=airflow
          # - REDIS_PASSWORD=redispass
      command: worker


volumes:
  db-data:
  data-static:
    external: true
  data-media:

networks:
  default:
    external:
      name: webproxy2
